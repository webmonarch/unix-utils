#!/usr/bin/env ruby

# Script for logging interface usage statistics for later review and/or analysis
#
# Internally, this script uses `interface-statistics` to report receive and 
# transmit statistics about each interface.


def assert(should_be_true, message)
    if !should_be_true
        STDERR.puts message
        exit(false)
    end
end

#
# Parse command options
#

require 'optparse'

opt_interfaces = []
opt_rrdfile = nil

opt_parser = OptionParser.new do |opts|
	opts.banner = "Usage: interface-statistics [options]"
	
	opts.on("-d", "--database RRDFILE", "Specify the RRD database file") do |file|
	    opt_rrdfile = file
	end
	
	opts.on("-i", "--interfaces IF1[,IF2]", Array,
		"List of interface names to record in the logger") do |interfaces|
	
		opt_interfaces = interfaces
	end
	
end

opt_parser.parse!(ARGV)

# validate params
assert(opt_rrdfile, "No RRD file specified")
assert(File.exist?(opt_rrdfile), "Specified RRD file doesn't exist")

assert(opt_interfaces.length > 0, "No interface names specified")


#
# get interface-statistics output to parse
#
# try reading from stdin (for debugging/testing)
# otherwise invoke `interface-statistics` directly
#

if STDIN.tty? || ARGF.eof?
    # no pip-ed input...invoke directly
    interface_statistics_output = `./interface-statistics -f hash`
    
    assert($?.exitstatus == 0, "Command failed.")
else
    interface_statistics_output = ARGF.read    
end


#
# Parse the interface-statistics output
#

# parse output into hash
interface_statistics_hash = eval interface_statistics_output

assert(interface_statistics_hash.instance_of?(Hash), "Command output not expected ruby Hash")

rrd_fields = []
rrd_values = ["N"]
opt_interfaces.each do |ifname|
    assert(interface_statistics_hash.has_key?(ifname), "Interface #{ifname} not found")
    
    [:rx_bytes, :tx_bytes].each do |f|
        rrd_fields << "ifname_#{f}"
        rrd_values << interface_statistics_hash[ifname][f]
    end

end

cmd = "rrdtool update #{opt_rrdfile} --template #{rrd_fields.join(':')} #{rrd_values.join(':')}"
puts "#{cmd}"
assert($?.exitstatus == 0, "rrdtool update failed.")
